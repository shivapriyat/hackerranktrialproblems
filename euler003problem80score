import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class Solution {

    public static List<Long> generatePrimes(int n) {
        
        boolean primeArr[]=new boolean[n+1];
        List<Long> onlyprimes=new ArrayList<Long>();
        for(int i=2;i<=n;i++) {
            //System.out.println(i);
            primeArr[i]=true;
        }
        for(int i=2;i<=n;) {
            if(primeArr[i]==true) {
                onlyprimes.add((long)i);
                for(int j=2*i;j<n;j+=i) {
                    primeArr[j]=false;
                }
            }
            if(i==2) {
                i++;
            }
            else {
                i+=2;
            }
        }
        /*for(long primeNum : onlyprimes) {
            System.out.println(primeNum);
        }
        System.out.println("size:"+ onlyprimes.size());*/
        return onlyprimes;
        
        
        
    }
    public static void main(String[] args) {
        List<Long> primesList = generatePrimes(1000000);
        Long primes[]=new Long[primesList.size()];
        primesList.toArray(primes);
        Scanner in = new Scanner(System.in);
        int t = in.nextInt();
        if(t>=1 && t<=10) {
        for (int a0 = 0; a0 < t; a0++) {
            long n = in.nextLong();
            if(n>=10 && n<(long)Math.pow(10,12)){
            long max=1;
            for(long prime:primes) {
                if(prime <= n && n%prime==0 && prime>max) {
                    max=prime;
                }
            }
            if(max==1) max=n;
            System.out.println(max);
            }
        }
            }
    }
}

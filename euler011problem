 //Largest product in a grid
 // left top left top diagonal right top diagonal 
 
 import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class Solution {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int[][] grid = new int[20][20];
        long maxProd=0;
        int k=0;
        for(int i=0; i < 20; i++){
            for(int j=0; j < 20; j++){
                grid[i][j]=in.nextInt();
                //up product
                if(i-1>=0 && i-2>=0 && i-3>=0) {
                    long prod=grid[i][j]*grid[i-1][j]*grid[i-2][j]*grid[i-3][j];
                    if(prod > maxProd) {
                        maxProd=prod;
                    }
                }
                //left product
                if(j-1>=0 && j-2>=0 && j-3>=0) {
                    long prod=grid[i][j]*grid[i][j-1]*grid[i][j-2]*grid[i][j-3];
                    if(prod > maxProd) {
                        maxProd=prod;
                    }
                }
                //diagonal product
                if(j-1>=0 && j-2>=0 && j-3>=0 && i-1>=0 && i-2>=0 && i-3>=0) {
                    long prod=grid[i][j]*grid[i-1][j-1]*grid[i-2][j-2]*grid[i-3][j-3];
                    if(prod > maxProd) {
                        maxProd=prod;
                    }
                }
                 //diagonal product (left)
                if(j-1>=0 && j-2>=0 && j-3>=0 && i-1>=0 && i-2>=0 && i-3>=0) {
                    long prod=grid[i][j]*grid[i-1][j-1]*grid[i-2][j-2]*grid[i-3][j-3];
                    if(prod > maxProd) {
                        maxProd=prod;
                    }
                }
                 //diagonal product (right)
                if(j+1<=19 && j+2<=19 && j+3<=19 && i-1>=0 && i-2>=0 && i-3>=0) {
                    long prod=grid[i][j]*grid[i-1][j+1]*grid[i-2][j+2]*grid[i-3][j+3];
                    if(prod > maxProd) {
                        maxProd=prod;
                    }
                }
            }
        }
        System.out.println(maxProd);
    }
}

